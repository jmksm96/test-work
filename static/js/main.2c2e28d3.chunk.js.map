{"version":3,"sources":["components/search/picture/Picture.tsx","api/api.ts","components/search/Search.tsx","components/bookmarks/Bookmarks.tsx","components/menu/Menu.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/search/picture/Picture.module.scss","components/menu/Menu.module.scss","components/search/Search.module.scss"],"names":["Picture","props","useState","tag","setTag","setIds","setRequestText","onChangeHandler","e","currentTarget","value","onBlurHandler","onKeyPressHandler","charCode","getPicUrl","farm","server","id","secret","renderPictureItem","picture","idPic","title","className","src","width","height","localStorage","getItem","Button","variant","startIcon","size","color","onClick","removeItem","style","button","setItem","JSON","stringify","setValues","TextField","label","field","onChange","onBlur","onKeyPress","pictureContainer","pictures","map","instance","axios","create","baseURL","api","getImg","searchText","pageNumber","get","then","res","data","Search","classes","useStyles","requestText","inputText","setInputText","pictureList","setPictureList","React","page","setPage","pagesCount","setPagesCount","setError","useEffect","photos","photo","pages","catch","err","root","noValidate","autoComplete","textField","fullWidth","stopPropagation","preventDefault","console","log","paginator","Pagination","count","Math","ceil","shape","event","container","Bookmarks","keys","Object","i","length","push","parse","storage","drawerWidth","makeStyles","theme","createStyles","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Menu","useTheme","open","setOpen","basename","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","s","span","Avatar","Drawer","anchor","paper","direction","Divider","List","to","link","ListItem","ListItemIcon","ListItemText","primary","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2c2e28d3.chunk.js","sourcesContent":["import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport style from './Picture.module.scss'\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nexport type PictureType = {\r\n    farm: number,\r\n    id: string,\r\n    isfamily: number,\r\n    isfriend: number,\r\n    ispublic: number,\r\n    owner: string,\r\n    secret: string,\r\n    server: string,\r\n    title: string\r\n}\r\n\r\ntype propsType = {\r\n    pictures: Array<PictureType>\r\n}\r\n\r\n\r\nconst Picture = (props: propsType) => {\r\n\r\n    const [tag, setTag] = useState(\"\")\r\n    const [ids, setIds] = useState<string>(\"\")\r\n    const [requestText, setRequestText] = useState<string>(\"\")\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTag(e.currentTarget.value)\r\n    }\r\n\r\n    const onBlurHandler = () => {\r\n        setRequestText(tag)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            setRequestText(tag)\r\n        }\r\n    }\r\n\r\n    const getPicUrl = (farm: number, server: string, id: string, secret: string) => {\r\n        return `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`\r\n    }\r\n\r\n    const setValues = (farm: number, server: string, id: string, secret: string, title: string) => {\r\n        localStorage.setItem(id, JSON.stringify({farm, server, id, secret, title}));\r\n        setIds(id)\r\n    }\r\n\r\n    const renderPictureItem = (picture: PictureType, idPic: string) => {\r\n        const {farm, server, id, secret, title} = picture;\r\n        return (\r\n            <ul key={idPic}>\r\n                <div className={'title'}>{title}</div>\r\n                <img src={getPicUrl(farm, server, id, secret)} width=\"300px\" height=\"300px\"/>\r\n                {!!localStorage.getItem(id) ?\r\n                    <Button variant=\"contained\"\r\n                            startIcon={<DeleteIcon />}\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                                localStorage.removeItem(id)\r\n                                setIds(secret)\r\n                            }}\r\n                            className={style.button}>Remove it</Button>\r\n                    :\r\n                    <Button variant=\"contained\"\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                            className={style.button}\r\n                            onClick={() => setValues(farm, server, id, secret, title)}>Bookmark it</Button>}\r\n                <TextField label=\"some tag?\"\r\n                           className={style.field}\r\n                           onChange={onChangeHandler}\r\n                           onBlur={onBlurHandler}\r\n                           onKeyPress={onKeyPressHandler}\r\n                />\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={style.pictureContainer}>\r\n            {props.pictures.map((picture) => renderPictureItem(picture, picture.id))}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Picture\r\n\r\n","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.flickr.com/services/rest/?method=flickr.photos.search&format=json&nojsoncallback=true&api_key=88511e631d64958716f46a5c31c01824&per_page=20'\r\n})\r\n\r\nconst api = {\r\n    getImg: (searchText:string,pageNumber:number) => {\r\n        return instance.get(`&page=${pageNumber}&text=${searchText}`)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport default api\r\n\r\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from \"react\";\r\nimport style from './Search.module.scss'\r\nimport Picture, {PictureType} from \"./picture/Picture\";\r\nimport api from \"../../api/api\";\r\nimport {useStyles} from \"../menu/Menu\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\n\r\nconst Search = () => {\r\n    const classes = useStyles();\r\n    const [requestText, setRequestText] = useState<string>(\"\")\r\n    const [inputText, setInputText] = useState<string>(\"\")\r\n    const [pictureList, setPictureList] = useState<Array<PictureType>>([])\r\n    const [page, setPage] = React.useState(1);\r\n    const [pagesCount, setPagesCount] = useState<number>(0)\r\n    const [error, setError] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        if (requestText !== \"\") {\r\n            api.getImg(requestText, page)\r\n                .then((res) => {\r\n                    setPictureList(res.photos.photo)\r\n                    setPagesCount(res.photos.pages)\r\n                })\r\n                .catch((err) => {\r\n                    setError(\"Some error\")\r\n                })\r\n        }\r\n    }, [requestText, page])\r\n\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputText(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        setRequestText(inputText)\r\n    }\r\n\r\n    const onBlurHandler = () => {\r\n        setRequestText(inputText)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        try {\r\n            if (e.charCode === 13) {\r\n                setRequestText(inputText)\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField id=\"standard-basic\"\r\n                           className={style.textField}\r\n                           label=\"Find pictures\"\r\n                           fullWidth={true}\r\n                           onChange={onChangeHandler}\r\n                           onBlur={onBlurHandler}\r\n                           onKeyPress={onKeyPressHandler}\r\n                />\r\n                <Button onClick={onClickHandler}\r\n                        color=\"primary\"\r\n                        variant=\"contained\">Find</Button>\r\n            </form>\r\n            <div className={style.paginator}>\r\n                <Pagination count={Math.ceil(pagesCount/15)} page={page} shape=\"rounded\" onChange={handleChange} />\r\n            </div>\r\n            <div className={style.container}>\r\n                <Picture pictures={pictureList}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React, {useState} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {PictureType} from \"../search/picture/Picture\";\r\nimport style from \"../search/picture/Picture.module.scss\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n\r\nconst Bookmarks = () => {\r\n    const [ids, setIds] = useState<string>(\"\")\r\n\r\n    const getPicUrl = (farm: number, server: string, id: string, secret: string) => {\r\n        return `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg`\r\n    }\r\n\r\n    const renderPictureItem = (picture: PictureType, idPic: string) => {\r\n        const {farm, server, id, secret, title} = picture;\r\n        debugger\r\n        return (\r\n            <ul key={idPic}>\r\n                <div>\r\n                    <div className={'title'}>{title}</div>\r\n                    <img src={getPicUrl(farm, server, id, secret)} width=\"300px\"/>\r\n                    <Button variant=\"contained\"\r\n                            className={style.button}\r\n                            size=\"small\"\r\n                            startIcon={<DeleteIcon />}\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                                localStorage.removeItem(id)\r\n                                setIds(id)\r\n                            }}>Remove it</Button>\r\n                </div>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const storage = () => {\r\n        let pictures: Array<PictureType> = []\r\n        let keys: Array<string> = Object.keys(localStorage)\r\n        for (let i = keys.length; i--;) {\r\n            // @ts-ignore\r\n            pictures.push(JSON.parse(localStorage.getItem(keys[i])))\r\n        }\r\n        return pictures;\r\n    }\r\n\r\n    debugger\r\n    return <div className={style.pictureContainer}>\r\n        {storage().map((picture: PictureType) => renderPictureItem(picture, picture.id))}\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default Bookmarks","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport {createStyles, makeStyles, Theme, useTheme,} from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\r\nimport {Avatar, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport s from \"./Menu.module.scss\";\r\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\r\nimport Search from \"../search/Search\";\r\nimport Bookmarks from \"../bookmarks/Bookmarks\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: \"flex\",\r\n        },\r\n        appBar: {\r\n            transition: theme.transitions.create([\"margin\", \"width\"], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n            transition: theme.transitions.create([\"margin\", \"width\"], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        hide: {\r\n            display: \"none\",\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        drawerHeader: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            transition: theme.transitions.create(\"margin\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: -drawerWidth,\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create(\"margin\", {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        },\r\n    })\r\n);\r\n\r\nconst Menu = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <BrowserRouter basename=\"\">\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            Image Finder\r\n                        </Typography>\r\n                        <span className={s.span}>\r\n\t\t\t\t\t\t\t{\" \"}\r\n                            <Avatar src=\"/broken-image.jpg\"/>\r\n\t\t\t\t\t\t</span>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            {theme.direction === \"ltr\" ? (\r\n                                <ChevronLeftIcon/>\r\n                            ) : (\r\n                                <ChevronRightIcon/>\r\n                            )}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider/>\r\n                    <List>\r\n                        <Link to=\"/search\" className={s.link}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <CloudIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Search\"/>\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/bookmarks\" className={s.link}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <BookmarksIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Bookmarks\"/>\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                    <Divider/>\r\n                </Drawer>\r\n                <main\r\n                    className={clsx(classes.content, {\r\n                        [classes.contentShift]: open,\r\n                    })}\r\n                >\r\n                    <div className={classes.drawerHeader}/>\r\n                </main>\r\n            </div>\r\n            <Route path=\"/\" render={() => <Redirect to={\"/search\"}/>}/>\r\n            <Route path=\"/search\" render={() => <Search/>}/>\r\n            <Route path=\"/bookmarks\" render={() => <Bookmarks/>}/>\r\n\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\nimport './App.css';\nimport Menu from './components/menu/Menu';\n\n\nfunction App() {\n    return (\n        <div>\n            <Menu/>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pictureContainer\":\"Picture_pictureContainer__29e2u\",\"button\":\"Picture_button__3oVO3\",\"field\":\"Picture_field__3PKzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"Menu_span__3DLMo\",\"link\":\"Menu_link__24YcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Search_paginator__2lbJ5\",\"container\":\"Search_container__2-ctL\",\"textField\":\"Search_textField__2Xfpe\"};"],"sourceRoot":""}